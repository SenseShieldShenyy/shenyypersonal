/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.virbox;

public class SSRuntimeApiBase {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SSRuntimeApiBase(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SSRuntimeApiBase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SSRuntimeApiModuleJNI.delete_SSRuntimeApiBase(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static long SlmInit(String APIPassword) {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmInit(APIPassword);
  }

  public static StFindLicenseRet SlmFindLicense(long LicenseID) {
    return new StFindLicenseRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmFindLicense(LicenseID), true);
  }

  public static StLicenseLoginRet SlmLogin(long LicenseID) {
    return new StLicenseLoginRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmLogin(LicenseID), true);
  }

  public static long SlmLogout(long Handle) {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmLogout(Handle);
  }

  public static long SlmKeepAlive(long Handle) {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmKeepAlive(Handle);
  }

  public static StEncDecRet SlmEncrypt(long Handle, String InBufferBase64) {
    return new StEncDecRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmEncrypt(Handle, InBufferBase64), true);
  }

  public static StEncDecRet SlmDecrypt(long Handle, String InBufferBase64) {
    return new StEncDecRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmDecrypt(Handle, InBufferBase64), true);
  }

  public static StUserDataGetSizeRet SlmUserDataGetSize(long Handle, EnumLicenseUserDataType Type) {
    return new StUserDataGetSizeRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmUserDataGetSize(Handle, Type.swigValue()), true);
  }

  public static StUserDataGetContentRet SlmUserDataRead(long Handle, EnumLicenseUserDataType Type, long Offset, long Length) {
    return new StUserDataGetContentRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmUserDataRead(Handle, Type.swigValue(), Offset, Length), true);
  }

  public static long SlmUserDataWrite(long Handle, String WriteBufferBase64, long Offset) {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmUserDataWrite(Handle, WriteBufferBase64, Offset);
  }

  public static StGetInfoRet SlmGetInfo(long Handle, EnumInfoType Type) {
    return new StGetInfoRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmGetInfo(Handle, Type.swigValue()), true);
  }

  public static long SlmCheckModule(long Handle, long ModuleID) {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmCheckModule(Handle, ModuleID);
  }

  public static StGetVersionRet SlmGetVersion() {
    return new StGetVersionRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmGetVersion(), true);
  }

  public static StGetDeveloperIDRet SlmGetDeveloperID() {
    return new StGetDeveloperIDRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmGetDeveloperID(), true);
  }

  public static String SlmErrorFormat(long ErrorCode, EnumLangID LangID) {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmErrorFormat(ErrorCode, LangID.swigValue());
  }

  public static long SlmCleanup() {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmCleanup();
  }

  public static long SlmOnlineBind(String LicenseKey) {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmOnlineBind(LicenseKey);
  }

  public static long SlmOnlineRefresh(String LicenseKey) {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmOnlineRefresh(LicenseKey);
  }

  public static long SlmOnlineUnbind(String LicenseKey) {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmOnlineUnbind(LicenseKey);
  }

  public static StOfflineGetC2DRet SlmOfflineGetBindC2D() {
    return new StOfflineGetC2DRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmOfflineGetBindC2D(), true);
  }

  public static StOfflineGetC2DRet SlmOfflineGetUnbindC2D(String LicenseKey) {
    return new StOfflineGetC2DRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmOfflineGetUnbindC2D(LicenseKey), true);
  }

  public static long SlmOfflineBind(String D2C) {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmOfflineBind(D2C);
  }

  public static StLocalBindInfoRet SlmEnumLocalBindInfo() {
    return new StLocalBindInfoRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmEnumLocalBindInfo(), true);
  }

  public static StLocalBindInfoRet SlmQueryLocalBindInfo(String LicenseKey) {
    return new StLocalBindInfoRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmQueryLocalBindInfo(LicenseKey), true);
  }

  public static StGetLocalLicenseInfoRet SlmGetLocalLicenseInfo(String LicenseKey) {
    return new StGetLocalLicenseInfoRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmGetLocalLicenseInfo(LicenseKey), true);
  }

  public static long SlmSetArmDeviceUUID(String DeviceUUIDHexStr) {
    return SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmSetArmDeviceUUID(DeviceUUIDHexStr);
  }

  public static StGetArmDeviceInfoRet SlmGetArmDeviceInfo() {
    return new StGetArmDeviceInfoRet(SSRuntimeApiModuleJNI.SSRuntimeApiBase_SlmGetArmDeviceInfo(), true);
  }

  public SSRuntimeApiBase() {
    this(SSRuntimeApiModuleJNI.new_SSRuntimeApiBase(), true);
  }

}
