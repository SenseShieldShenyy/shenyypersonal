/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.virbox;

public class SSRuntimeApiModuleJNI {
  public final static native long new_vectorStLocalBindInfo__SWIG_0();
  public final static native long new_vectorStLocalBindInfo__SWIG_1(long jarg1, vectorStLocalBindInfo jarg1_);
  public final static native long vectorStLocalBindInfo_capacity(long jarg1, vectorStLocalBindInfo jarg1_);
  public final static native void vectorStLocalBindInfo_reserve(long jarg1, vectorStLocalBindInfo jarg1_, long jarg2);
  public final static native boolean vectorStLocalBindInfo_isEmpty(long jarg1, vectorStLocalBindInfo jarg1_);
  public final static native void vectorStLocalBindInfo_clear(long jarg1, vectorStLocalBindInfo jarg1_);
  public final static native long new_vectorStLocalBindInfo__SWIG_2(int jarg1, long jarg2, StLocalBindInfo jarg2_);
  public final static native int vectorStLocalBindInfo_doSize(long jarg1, vectorStLocalBindInfo jarg1_);
  public final static native void vectorStLocalBindInfo_doAdd__SWIG_0(long jarg1, vectorStLocalBindInfo jarg1_, long jarg2, StLocalBindInfo jarg2_);
  public final static native void vectorStLocalBindInfo_doAdd__SWIG_1(long jarg1, vectorStLocalBindInfo jarg1_, int jarg2, long jarg3, StLocalBindInfo jarg3_);
  public final static native long vectorStLocalBindInfo_doRemove(long jarg1, vectorStLocalBindInfo jarg1_, int jarg2);
  public final static native long vectorStLocalBindInfo_doGet(long jarg1, vectorStLocalBindInfo jarg1_, int jarg2);
  public final static native long vectorStLocalBindInfo_doSet(long jarg1, vectorStLocalBindInfo jarg1_, int jarg2, long jarg3, StLocalBindInfo jarg3_);
  public final static native void vectorStLocalBindInfo_doRemoveRange(long jarg1, vectorStLocalBindInfo jarg1_, int jarg2, int jarg3);
  public final static native void delete_vectorStLocalBindInfo(long jarg1);
  public final static native long new_vectorStSlmLicenseInfo__SWIG_0();
  public final static native long new_vectorStSlmLicenseInfo__SWIG_1(long jarg1, vectorStSlmLicenseInfo jarg1_);
  public final static native long vectorStSlmLicenseInfo_capacity(long jarg1, vectorStSlmLicenseInfo jarg1_);
  public final static native void vectorStSlmLicenseInfo_reserve(long jarg1, vectorStSlmLicenseInfo jarg1_, long jarg2);
  public final static native boolean vectorStSlmLicenseInfo_isEmpty(long jarg1, vectorStSlmLicenseInfo jarg1_);
  public final static native void vectorStSlmLicenseInfo_clear(long jarg1, vectorStSlmLicenseInfo jarg1_);
  public final static native long new_vectorStSlmLicenseInfo__SWIG_2(int jarg1, long jarg2, StSlmLicenseInfo jarg2_);
  public final static native int vectorStSlmLicenseInfo_doSize(long jarg1, vectorStSlmLicenseInfo jarg1_);
  public final static native void vectorStSlmLicenseInfo_doAdd__SWIG_0(long jarg1, vectorStSlmLicenseInfo jarg1_, long jarg2, StSlmLicenseInfo jarg2_);
  public final static native void vectorStSlmLicenseInfo_doAdd__SWIG_1(long jarg1, vectorStSlmLicenseInfo jarg1_, int jarg2, long jarg3, StSlmLicenseInfo jarg3_);
  public final static native long vectorStSlmLicenseInfo_doRemove(long jarg1, vectorStSlmLicenseInfo jarg1_, int jarg2);
  public final static native long vectorStSlmLicenseInfo_doGet(long jarg1, vectorStSlmLicenseInfo jarg1_, int jarg2);
  public final static native long vectorStSlmLicenseInfo_doSet(long jarg1, vectorStSlmLicenseInfo jarg1_, int jarg2, long jarg3, StSlmLicenseInfo jarg3_);
  public final static native void vectorStSlmLicenseInfo_doRemoveRange(long jarg1, vectorStSlmLicenseInfo jarg1_, int jarg2, int jarg3);
  public final static native void delete_vectorStSlmLicenseInfo(long jarg1);
  public final static native int SS_OK_get();
  public final static native int SS_ERROR_INVALID_PARAM_get();
  public final static native int SS_ERROR_MEMORY_FAIELD_get();
  public final static native int SS_ERROR_INSUFFICIENT_BUFFER_get();
  public final static native int SS_ERROR_INVALID_HANDLE_get();
  public final static native int SS_ERROR_TIMEOUT_get();
  public final static native int SS_ERROR_UNSUPPORT_get();
  public final static native int SS_ERROR_NET_ERROR_get();
  public final static native int SS_ERROR_MASTER_UNSUPPORT_PIN_get();
  public final static native int SS_ERROR_MASTER_PIN_NOT_ACTIVE_get();
  public final static native int SS_ERROR_MASTER_OUTDATED_VERSION_get();
  public final static native int SS_ERROR_MASTER_PIN_WRONG_get();
  public final static native int SS_ERROR_MASTER_PIN_BLOCKED_get();
  public final static native int SS_ERROR_SERVER_NOT_FOUND_get();
  public final static native int SS_ERROR_SLM_HANDLE_IS_FULL_get();
  public final static native int SS_ERROR_SYSTEM_ERROR_get();
  public final static native int SS_ERROR_WHITELISTED_get();
  public final static native int SS_ERROR_BLACKLISTED_get();
  public final static native int SS_ERROR_LOCK_NOT_FOUND_get();
  public final static native int SS_ERROR_D2C_NO_PACKAGE_get();
  public final static native int SS_ERROR_DEVELOPER_CERT_ALREADY_EXIST_get();
  public final static native int SS_ERROR_PARSE_CERT_get();
  public final static native int SS_ERROR_D2C_PACKAGE_TOO_LARGE_get();
  public final static native int SS_ERROR_RESPONSE_get();
  public final static native int SS_ERROR_RUNTIME_NOT_INITIALIZE_get();
  public final static native int SS_ERROR_RUNTIME_VERSION_get();
  public final static native int SS_ERROR_LIC_NOT_FOUND_get();
  public final static native int SS_ERROR_USER_DATA_TOO_SMALL_get();
  public final static native int SS_ERROR_INVALID_D2C_PACKAGE_get();
  public final static native int SS_ERROR_CLOUD_RESPONSE_get();
  public final static native int SS_ERROR_USER_DATA_TOO_LARGE_get();
  public final static native int SS_ERROR_INVALID_MEMORY_ID_get();
  public final static native int SS_ERROR_INVALID_MEMORY_OFFSET_get();
  public final static native int SS_ERROR_NO_LOGGED_USER_get();
  public final static native int SS_ERROR_USER_AUTH_SERVER_NOT_RUNNING_get();
  public final static native int SS_ERROR_LICENSE_MODULE_NOT_EXISTS_get();
  public final static native int SS_ERROR_DEVELOPER_PASSWORD_get();
  public final static native int SS_ERROR_CALLBACK_VERSION_get();
  public final static native int SS_ERROR_INFO_RELOGIN_get();
  public final static native int SS_ERROR_LICENSE_VERIFY_get();
  public final static native int SS_ERROR_LICENSE_NEED_TO_ACTIVATE_get();
  public final static native int SS_ERROR_IPC_FAILED_get();
  public final static native int SS_ERROR_IPC_CONNECT_FAILED_get();
  public final static native int ERROR_LM_SVC_INVALID_SESSION_get();
  public final static native int ERROR_LM_SVC_SESSION_ALREADY_DELETED_get();
  public final static native int ERROR_LM_SVC_LICENCE_EXPIRED_get();
  public final static native int ERROR_LM_SVC_SESSION_TIME_OUT_get();
  public final static native int ERROR_LM_REMOTE_LOGIN_DENIED_get();
  public final static native int SS_ERROR_FIRM_LICENCE_ALL_DISABLED_get();
  public final static native int SS_ERROR_FIRM_CUR_LICENCE_DISABLED_get();
  public final static native int SS_ERROR_FIRM_LICENCE_INVALID_get();
  public final static native int SS_ERROR_FIRM_LIC_STILL_UNAVALIABLE_get();
  public final static native int SS_ERROR_FIRM_LIC_TERMINATED_get();
  public final static native int SS_ERROR_FIRM_LIC_RUNTIME_TIME_OUT_get();
  public final static native int SS_ERROR_FIRM_LIC_COUNTER_IS_ZERO_get();
  public final static native int SS_ERROR_FIRM_LIC_MAX_CONNECTION_get();
  public final static native int SS_ERROR_FIRM_REACHED_MAX_SESSION_get();
  public final static native int SS_ERROR_FIRM_NOT_ENOUGH_SHAREMEMORY_get();
  public final static native int SS_ERROR_FIRM_INVALID_DATA_LEN_get();
  public final static native int SS_ERROR_FIRM_DATA_FILE_NOT_FOUND_get();
  public final static native int SS_ERROR_FIRM_INVALID_PKG_TYPE_get();
  public final static native int SS_ERROR_FIRM_INVALID_TIME_STAMP_get();
  public final static native int SS_ERROR_FIRM_INVALID_UPD_LIC_ID_get();
  public final static native int SS_ERROR_FIRM_LIC_ALREADY_EXIST_get();
  public final static native int SS_ERROR_FIRM_LICENCE_SIZE_LIMITTED_get();
  public final static native int SS_ERROR_FIRM_INVALID_DATA_FILE_OFFSET_get();
  public final static native int SS_ERROR_FIRM_SESSION_ALREADY_LOGOUT_get();
  public final static native int SS_ERROR_FIRM_INVALID_USER_DATA_TYPE_get();
  public final static native int SS_ERROR_FIRM_INVALID_DATA_FILE_SIZE_get();
  public final static native int SS_ERROR_FIRM_ALL_LIC_TERMINATED_get();
  public final static native int SS_ERROR_FIRM_UPDATE_FAILED_get();
  public final static native int SS_ERROR_FIRM_DATA_LENGTH_ALIGNMENT_get();
  public final static native int SS_ERROR_FIRM_DATA_CRYPTION_get();
  public final static native int SS_ERROR_FIRM_SHORTCODE_UPDATE_NOT_SUPPORTED_get();
  public final static native int SS_ERROR_FIRM_LIC_USR_DATA_NOT_EXIST_get();
  public final static native int SS_ERROR_FIRM_FILE_NOT_FOUND_get();
  public final static native int SS_ERROR_FIRM_INVLAID_DEVELOPER_ID_get();
  public final static native int SS_ERROR_FIRM_BEYOND_PKG_ITEM_SIZE_get();
  public final static native int SS_ERROR_FIRM_DEVICE_LOCKED_get();
  public final static native int SS_ERROR_FIRM_NOT_EXCHANGE_KEY_get();
  public final static native int SS_ERROR_FIRM_INVALID_SHORTCODE_SWAP_FILE_get();
  public final static native int SS_ERROR_FIRM_SHORTCODE_UPDATE_USER_DATA_get();
  public final static native int SS_ERROR_AUTH_SERVER_INVALID_TOKEN_get();
  public final static native int SS_ERROR_AUTH_SERVER_REFRESH_TOKEN_get();
  public final static native int SS_ERROR_AUTH_SERVER_LOGIN_CANCELED_get();
  public final static native int SS_ERROR_AUTH_SERVER_GET_ALL_USER_INFO_FAIL_get();
  public final static native int SS_ERROR_CLOUD_INVALID_TOKEN_get();
  public final static native int SS_ERROR_CLOUD_LICENSE_ALREADY_LOGIN_get();
  public final static native int SS_ERROR_CLOUD_LICENSE_EXPIRED_get();
  public final static native int SS_ERROR_CLOUD_SESSION_KICKED_get();
  public final static native int SS_ERROR_CLOUD_INVALID_SESSSION_get();
  public final static native int SS_ERROR_CLOUD_SESSION_TIMEOUT_get();
  public final static native int SS_ERROR_CLOUD_LICENSE_NOT_EXISTS_get();
  public final static native int SS_ERROR_CLOUD_LICENSE_NOT_ACTIVE_get();
  public final static native int SS_ERROR_CLOUD_LICENSE_EXPIRED2_get();
  public final static native int SS_ERROR_CLOUD_LICENSE_COUNTER_IS_ZERO_get();
  public final static native int SS_ERROR_CLOUD_LICENSE_RUNTIME_TIME_OUT_get();
  public final static native int SS_ERROR_CLOUD_LICENSE_MAX_CONNECTION_get();
  public final static native int SS_ERROR_CLOUD_LICENSE_LOCKED_get();
  public final static native int SS_ERROR_CLOUD_LICENSE_DATA_NOT_EXISTS_get();
  public final static native int SS_ERROR_CLOUD_LICENSE_STILL_UNAVAILABLE_get();
  public final static native int SS_ERROR_SO_BEFORE_START_TIME_get();
  public final static native int SS_ERROR_SO_EXPIRED_get();
  public final static native int SS_ERROR_SO_LICENSE_BIND_ERROR_get();
  public final static native int SS_ERROR_SO_LICENSE_BIND_FULL_get();
  public final static native int SS_ERROR_SO_LICENSE_UNBOUND_get();
  public final static native int SS_ERROR_SO_LICENSE_MAX_BIND_FULL_get();
  public final static native int SS_ERROR_SO_INVALID_ACCESS_TOKEN_get();
  public final static native int SS_ERROR_SO_NOT_SUPPORTED_OFFLINE_BIND_get();
  public final static native int SS_ERROR_SO_EXPIRED_C2D_get();
  public final static native int SS_ERROR_SO_OFFLINE_UNBIND_REPEAT_get();
  public final static native int SS_ERROR_SO_DEVELOPER_ACCOUNT_get();
  public final static native int SS_ERROR_SO_OUTDATED_VERSION_get();
  public final static native int SS_ERROR_LICKEY_QUERY_STATUS_REQ_ERROR_get();
  public final static native int SS_ERROR_LICKEY_EXCHANGE_REQ_ERROR_get();
  public final static native int SS_ERROR_LICKEY_NOT_EXIST_get();
  public final static native int SS_ERROR_LICKEY_DEDUCT_FAILED_get();
  public final static native int SS_ERROR_LICKEY_C2D_INVALID_CHAR_ENCODING_get();
  public final static native int SS_ERROR_LICKEY_C2D_UNSUPPORTED_PROTO_TYPE_get();
  public final static native int SS_ERROR_LICKEY_C2D_UNSUPPORTED_PROTO_VER_get();
  public final static native int SS_ERROR_LICKEY_C2D_UNSUPPORTED_HWFP_VER_get();
  public final static native int SS_ERROR_LICKEY_C2D_INCOMPATIBLE_MACHINE_ID_get();
  public final static native int SS_ERROR_LICKEY_C2D_UNSUPPORTED_INFO_VER_get();
  public final static native int SS_ERROR_LICKEY_C2D_OVERDUE_get();
  public final static native int SS_ERROR_LICKEY_C2D_HWFP_VERIFY_FAILED_get();
  public final static native int SS_ERROR_LICKEY_C2D_OLD_SS_VER_get();
  public final static native int SS_ERROR_LICKEY_C2D_PLATFORM_JUST_4_TRADITIONAL_get();
  public final static native int SS_ERROR_LICKEY_C2D_PLATFORM_JUST_4_ANDROID_get();
  public final static native int SS_ERROR_LICKEY_C2D_EXCEPTION_HAPPENS_get();
  public final static native int SS_ERROR_LICKEY_BIND_NO_AVAILABLE_LICENSE_get();
  public final static native int SS_ERROR_LICKEY_BIND_LICENSE_NOT_START_get();
  public final static native int SS_ERROR_LICKEY_BIND_LICENSE_EXPIRED_get();
  public final static native int SS_ERROR_LICKEY_BINDING_LIMIT_EXCEEDED_get();
  public final static native int SS_ERROR_LICKEY_BOUND_LIMIT_EXCEEDED_get();
  public final static native int SS_ERROR_LICKEY_BIND_NO_AVAILABLE_PKG_get();
  public final static native int SS_ERROR_LICKEY_D2C_EXCEPTION_HAPPENS_get();
  public final static native int SS_ERROR_LICKEY_LICENSE_NOT_EXIST_get();
  public final static native int SS_ERROR_LICKEY_D2C_PACKAGE_get();
  public final static native int SS_ERROR_LICKEY_NOT_EXIST_V2_get();
  public final static native int SS_ERROR_LICKEY_INVALID_C2D_DATA_get();
  public final static native int SS_ERROR_LICKEY_INVALID_C2D_PARAM_get();
  public final static native int SS_ERROR_LICKEY_NO_D2C_PACKAGE_get();
  public final static native int SS_ERROR_LICKEY_LICENSE_ERROR_get();
  public final static native int SS_ERROR_LICKEY_ABNORMAL_COST_get();
  public final static native int USERDATATYPE_ROM_get();
  public final static native int USERDATATYPE_RAW_get();
  public final static native int USERDATATYPE_PUB_get();
  public final static native int INFOTYPE_LOCK_get();
  public final static native int INFOTYPE_SESSION_get();
  public final static native int INFOTYPE_LICENSE_get();
  public final static native int INFOTYPE_FILE_LIST_get();
  public final static native int LANGUAGE_SIMPLIFIED_CHINESE_get();
  public final static native int LANGUAGE_ENGLISH_get();
  public final static native int LANGUAGE_TRADITIONAL_CHINESE_get();
  public final static native void StFindLicenseRet_RetValue_set(long jarg1, StFindLicenseRet jarg1_, long jarg2);
  public final static native long StFindLicenseRet_RetValue_get(long jarg1, StFindLicenseRet jarg1_);
  public final static native void StFindLicenseRet_Data_set(long jarg1, StFindLicenseRet jarg1_, String jarg2);
  public final static native String StFindLicenseRet_Data_get(long jarg1, StFindLicenseRet jarg1_);
  public final static native long new_StFindLicenseRet();
  public final static native void delete_StFindLicenseRet(long jarg1);
  public final static native void StLicenseLoginRet_RetValue_set(long jarg1, StLicenseLoginRet jarg1_, long jarg2);
  public final static native long StLicenseLoginRet_RetValue_get(long jarg1, StLicenseLoginRet jarg1_);
  public final static native void StLicenseLoginRet_slmHandle_set(long jarg1, StLicenseLoginRet jarg1_, long jarg2);
  public final static native long StLicenseLoginRet_slmHandle_get(long jarg1, StLicenseLoginRet jarg1_);
  public final static native long new_StLicenseLoginRet();
  public final static native void delete_StLicenseLoginRet(long jarg1);
  public final static native void StEncDecRet_RetValue_set(long jarg1, StEncDecRet jarg1_, long jarg2);
  public final static native long StEncDecRet_RetValue_get(long jarg1, StEncDecRet jarg1_);
  public final static native void StEncDecRet_DataBase64_set(long jarg1, StEncDecRet jarg1_, String jarg2);
  public final static native String StEncDecRet_DataBase64_get(long jarg1, StEncDecRet jarg1_);
  public final static native long new_StEncDecRet();
  public final static native void delete_StEncDecRet(long jarg1);
  public final static native void StUserDataGetSizeRet_RetValue_set(long jarg1, StUserDataGetSizeRet jarg1_, long jarg2);
  public final static native long StUserDataGetSizeRet_RetValue_get(long jarg1, StUserDataGetSizeRet jarg1_);
  public final static native void StUserDataGetSizeRet_Size_set(long jarg1, StUserDataGetSizeRet jarg1_, long jarg2);
  public final static native long StUserDataGetSizeRet_Size_get(long jarg1, StUserDataGetSizeRet jarg1_);
  public final static native long new_StUserDataGetSizeRet();
  public final static native void delete_StUserDataGetSizeRet(long jarg1);
  public final static native void StUserDataGetContentRet_RetValue_set(long jarg1, StUserDataGetContentRet jarg1_, long jarg2);
  public final static native long StUserDataGetContentRet_RetValue_get(long jarg1, StUserDataGetContentRet jarg1_);
  public final static native void StUserDataGetContentRet_DataBase64_set(long jarg1, StUserDataGetContentRet jarg1_, String jarg2);
  public final static native String StUserDataGetContentRet_DataBase64_get(long jarg1, StUserDataGetContentRet jarg1_);
  public final static native long new_StUserDataGetContentRet();
  public final static native void delete_StUserDataGetContentRet(long jarg1);
  public final static native void StGetInfoRet_RetValue_set(long jarg1, StGetInfoRet jarg1_, long jarg2);
  public final static native long StGetInfoRet_RetValue_get(long jarg1, StGetInfoRet jarg1_);
  public final static native void StGetInfoRet_Data_set(long jarg1, StGetInfoRet jarg1_, String jarg2);
  public final static native String StGetInfoRet_Data_get(long jarg1, StGetInfoRet jarg1_);
  public final static native long new_StGetInfoRet();
  public final static native void delete_StGetInfoRet(long jarg1);
  public final static native void StGetVersionRet_RetValue_set(long jarg1, StGetVersionRet jarg1_, long jarg2);
  public final static native long StGetVersionRet_RetValue_get(long jarg1, StGetVersionRet jarg1_);
  public final static native void StGetVersionRet_ApiVersion_set(long jarg1, StGetVersionRet jarg1_, long jarg2);
  public final static native long StGetVersionRet_ApiVersion_get(long jarg1, StGetVersionRet jarg1_);
  public final static native void StGetVersionRet_SSVersion_set(long jarg1, StGetVersionRet jarg1_, long jarg2);
  public final static native long StGetVersionRet_SSVersion_get(long jarg1, StGetVersionRet jarg1_);
  public final static native long new_StGetVersionRet();
  public final static native void delete_StGetVersionRet(long jarg1);
  public final static native void StGetDeveloperIDRet_RetValue_set(long jarg1, StGetDeveloperIDRet jarg1_, long jarg2);
  public final static native long StGetDeveloperIDRet_RetValue_get(long jarg1, StGetDeveloperIDRet jarg1_);
  public final static native void StGetDeveloperIDRet_DeveloperID_set(long jarg1, StGetDeveloperIDRet jarg1_, String jarg2);
  public final static native String StGetDeveloperIDRet_DeveloperID_get(long jarg1, StGetDeveloperIDRet jarg1_);
  public final static native long new_StGetDeveloperIDRet();
  public final static native void delete_StGetDeveloperIDRet(long jarg1);
  public final static native void StOfflineGetC2DRet_RetValue_set(long jarg1, StOfflineGetC2DRet jarg1_, long jarg2);
  public final static native long StOfflineGetC2DRet_RetValue_get(long jarg1, StOfflineGetC2DRet jarg1_);
  public final static native void StOfflineGetC2DRet_Data_set(long jarg1, StOfflineGetC2DRet jarg1_, String jarg2);
  public final static native String StOfflineGetC2DRet_Data_get(long jarg1, StOfflineGetC2DRet jarg1_);
  public final static native long new_StOfflineGetC2DRet();
  public final static native void delete_StOfflineGetC2DRet(long jarg1);
  public final static native void StLocalBindInfo_DeveloperID_set(long jarg1, StLocalBindInfo jarg1_, String jarg2);
  public final static native String StLocalBindInfo_DeveloperID_get(long jarg1, StLocalBindInfo jarg1_);
  public final static native void StLocalBindInfo_Number_set(long jarg1, StLocalBindInfo jarg1_, String jarg2);
  public final static native String StLocalBindInfo_Number_get(long jarg1, StLocalBindInfo jarg1_);
  public final static native void StLocalBindInfo_Guid_set(long jarg1, StLocalBindInfo jarg1_, String jarg2);
  public final static native String StLocalBindInfo_Guid_get(long jarg1, StLocalBindInfo jarg1_);
  public final static native void StLocalBindInfo_LicenseKey_set(long jarg1, StLocalBindInfo jarg1_, String jarg2);
  public final static native String StLocalBindInfo_LicenseKey_get(long jarg1, StLocalBindInfo jarg1_);
  public final static native void StLocalBindInfo_Status_set(long jarg1, StLocalBindInfo jarg1_, long jarg2);
  public final static native long StLocalBindInfo_Status_get(long jarg1, StLocalBindInfo jarg1_);
  public final static native void StLocalBindInfo_VCLock_set(long jarg1, StLocalBindInfo jarg1_, long jarg2);
  public final static native long StLocalBindInfo_VCLock_get(long jarg1, StLocalBindInfo jarg1_);
  public final static native long new_StLocalBindInfo();
  public final static native void delete_StLocalBindInfo(long jarg1);
  public final static native void StLocalBindInfoRet_RetValue_set(long jarg1, StLocalBindInfoRet jarg1_, long jarg2);
  public final static native long StLocalBindInfoRet_RetValue_get(long jarg1, StLocalBindInfoRet jarg1_);
  public final static native void StLocalBindInfoRet_Data_set(long jarg1, StLocalBindInfoRet jarg1_, long jarg2, vectorStLocalBindInfo jarg2_);
  public final static native long StLocalBindInfoRet_Data_get(long jarg1, StLocalBindInfoRet jarg1_);
  public final static native long new_StLocalBindInfoRet();
  public final static native void delete_StLocalBindInfoRet(long jarg1);
  public final static native void StSlmLicenseInfo_LicenseVersion_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_LicenseVersion_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_Flag_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_Flag_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_Guid_set(long jarg1, StSlmLicenseInfo jarg1_, String jarg2);
  public final static native String StSlmLicenseInfo_Guid_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_LicenseID_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_LicenseID_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_StartTime_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_StartTime_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_EndTime_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_EndTime_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_SpanTime_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_SpanTime_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_Timestamp_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_Timestamp_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_Serial_set(long jarg1, StSlmLicenseInfo jarg1_, int jarg2);
  public final static native int StSlmLicenseInfo_Serial_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_Concurrency_set(long jarg1, StSlmLicenseInfo jarg1_, int jarg2);
  public final static native int StSlmLicenseInfo_Concurrency_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_ConcurrencyType_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_ConcurrencyType_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_Count_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_Count_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_ModuleBit_set(long jarg1, StSlmLicenseInfo jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger StSlmLicenseInfo_ModuleBit_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_LockTime_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_LockTime_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_FirstUseTime_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_FirstUseTime_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_RemainingTimes_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_RemainingTimes_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_OfflinePeriod_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_OfflinePeriod_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_BindNode_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_BindNode_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_MaxBindNode_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_MaxBindNode_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_LastUpdateTimestamp_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_LastUpdateTimestamp_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_LastUpdateTimeSN_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_LastUpdateTimeSN_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_Enable_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_Enable_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_RawSize_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_RawSize_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_RomSize_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_RomSize_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native void StSlmLicenseInfo_PubSize_set(long jarg1, StSlmLicenseInfo jarg1_, long jarg2);
  public final static native long StSlmLicenseInfo_PubSize_get(long jarg1, StSlmLicenseInfo jarg1_);
  public final static native long new_StSlmLicenseInfo();
  public final static native void delete_StSlmLicenseInfo(long jarg1);
  public final static native void StGetLocalLicenseInfoRet_RetValue_set(long jarg1, StGetLocalLicenseInfoRet jarg1_, long jarg2);
  public final static native long StGetLocalLicenseInfoRet_RetValue_get(long jarg1, StGetLocalLicenseInfoRet jarg1_);
  public final static native void StGetLocalLicenseInfoRet_Data_set(long jarg1, StGetLocalLicenseInfoRet jarg1_, long jarg2, vectorStSlmLicenseInfo jarg2_);
  public final static native long StGetLocalLicenseInfoRet_Data_get(long jarg1, StGetLocalLicenseInfoRet jarg1_);
  public final static native long new_StGetLocalLicenseInfoRet();
  public final static native void delete_StGetLocalLicenseInfoRet(long jarg1);
  public final static native void StDeviceInfo_UUID_set(long jarg1, StDeviceInfo jarg1_, String jarg2);
  public final static native String StDeviceInfo_UUID_get(long jarg1, StDeviceInfo jarg1_);
  public final static native void StDeviceInfo_Mac_set(long jarg1, StDeviceInfo jarg1_, String jarg2);
  public final static native String StDeviceInfo_Mac_get(long jarg1, StDeviceInfo jarg1_);
  public final static native void StDeviceInfo_CpuSerialID_set(long jarg1, StDeviceInfo jarg1_, String jarg2);
  public final static native String StDeviceInfo_CpuSerialID_get(long jarg1, StDeviceInfo jarg1_);
  public final static native void StDeviceInfo_CpuVendor_set(long jarg1, StDeviceInfo jarg1_, String jarg2);
  public final static native String StDeviceInfo_CpuVendor_get(long jarg1, StDeviceInfo jarg1_);
  public final static native void StDeviceInfo_CpuBrand_set(long jarg1, StDeviceInfo jarg1_, String jarg2);
  public final static native String StDeviceInfo_CpuBrand_get(long jarg1, StDeviceInfo jarg1_);
  public final static native void StDeviceInfo_Partition_set(long jarg1, StDeviceInfo jarg1_, String jarg2);
  public final static native String StDeviceInfo_Partition_get(long jarg1, StDeviceInfo jarg1_);
  public final static native long new_StDeviceInfo();
  public final static native void delete_StDeviceInfo(long jarg1);
  public final static native void StGetArmDeviceInfoRet_RetValue_set(long jarg1, StGetArmDeviceInfoRet jarg1_, long jarg2);
  public final static native long StGetArmDeviceInfoRet_RetValue_get(long jarg1, StGetArmDeviceInfoRet jarg1_);
  public final static native void StGetArmDeviceInfoRet_Data_set(long jarg1, StGetArmDeviceInfoRet jarg1_, long jarg2, StDeviceInfo jarg2_);
  public final static native long StGetArmDeviceInfoRet_Data_get(long jarg1, StGetArmDeviceInfoRet jarg1_);
  public final static native long new_StGetArmDeviceInfoRet();
  public final static native void delete_StGetArmDeviceInfoRet(long jarg1);
  public final static native long SSRuntimeApiBase_SlmInit(String jarg1);
  public final static native long SSRuntimeApiBase_SlmFindLicense(long jarg1);
  public final static native long SSRuntimeApiBase_SlmLogin(long jarg1);
  public final static native long SSRuntimeApiBase_SlmLogout(long jarg1);
  public final static native long SSRuntimeApiBase_SlmKeepAlive(long jarg1);
  public final static native long SSRuntimeApiBase_SlmEncrypt(long jarg1, String jarg2);
  public final static native long SSRuntimeApiBase_SlmDecrypt(long jarg1, String jarg2);
  public final static native long SSRuntimeApiBase_SlmUserDataGetSize(long jarg1, int jarg2);
  public final static native long SSRuntimeApiBase_SlmUserDataRead(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native long SSRuntimeApiBase_SlmUserDataWrite(long jarg1, String jarg2, long jarg3);
  public final static native long SSRuntimeApiBase_SlmGetInfo(long jarg1, int jarg2);
  public final static native long SSRuntimeApiBase_SlmCheckModule(long jarg1, long jarg2);
  public final static native long SSRuntimeApiBase_SlmGetVersion();
  public final static native long SSRuntimeApiBase_SlmGetDeveloperID();
  public final static native String SSRuntimeApiBase_SlmErrorFormat(long jarg1, int jarg2);
  public final static native long SSRuntimeApiBase_SlmCleanup();
  public final static native long SSRuntimeApiBase_SlmOnlineBind(String jarg1);
  public final static native long SSRuntimeApiBase_SlmOnlineRefresh(String jarg1);
  public final static native long SSRuntimeApiBase_SlmOnlineUnbind(String jarg1);
  public final static native long SSRuntimeApiBase_SlmOfflineGetBindC2D();
  public final static native long SSRuntimeApiBase_SlmOfflineGetUnbindC2D(String jarg1);
  public final static native long SSRuntimeApiBase_SlmOfflineBind(String jarg1);
  public final static native long SSRuntimeApiBase_SlmEnumLocalBindInfo();
  public final static native long SSRuntimeApiBase_SlmQueryLocalBindInfo(String jarg1);
  public final static native long SSRuntimeApiBase_SlmGetLocalLicenseInfo(String jarg1);
  public final static native long SSRuntimeApiBase_SlmSetArmDeviceUUID(String jarg1);
  public final static native long SSRuntimeApiBase_SlmGetArmDeviceInfo();
  public final static native long new_SSRuntimeApiBase();
  public final static native void delete_SSRuntimeApiBase(long jarg1);
}
